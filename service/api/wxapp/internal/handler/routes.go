// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/skywalkerwei/pluton-faster/service/api/wxapp/internal/svc"

	"github.com/tal-tech/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/user/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/register",
				Handler: RegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/user/userinfo",
				Handler: UserInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/product/create",
				Handler: ProductCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/product/update",
				Handler: ProductUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/product/remove",
				Handler: ProductRemoveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/product/detail",
				Handler: ProductDetailHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/carts/list",
				Handler: CartsListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/carts/add",
				Handler: CartsAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/carts/edit",
				Handler: CartsEditHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/carts/del",
				Handler: CartsDelHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/order/create",
				Handler: OrderCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/order/update",
				Handler: OrderUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/order/remove",
				Handler: OrderRemoveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/order/detail",
				Handler: OrderDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/order/list",
				Handler: OrderListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/pay/create",
				Handler: PayCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/pay/detail",
				Handler: PayDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/pay/callback",
				Handler: PayCallbackHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/wxPayCallBack",
				Handler: WxPayCallBackHandler(serverCtx),
			},
		},
	)
}
